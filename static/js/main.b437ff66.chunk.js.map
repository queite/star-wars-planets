{"version":3,"sources":["img/icons8-guerra-nas-estrelas.svg","context/Context.js","components/Filters.js","components/Header.js","components/Table.js","services/fetchData.js","context/Provider.js","App.js","index.js"],"names":["module","exports","Context","createContext","initialColumnFilters","Filters","useContext","filters","setFilters","columnFilters","setOrder","savedFilters","setSavedFilters","setColumnFilters","useState","column","sort","ordenate","setOrdenate","numericalFilterObj","comparison","value","id","Math","floor","Date","now","random","toString","numericalFilter","setNumericalFilter","capitalize","str","charAt","toUpperCase","substr","useEffect","currentFilters","map","filter","newFilter","includes","className","data-testid","type","placeholder","onChange","e","filterByName","target","defaultValue","name","key","replace","onClick","index","htmlFor","idFilter","newSavedFilter","item","handleDeleteFilter","Header","src","starWars","alt","Table","results","data","order","planetsToRender","planetToLowerCase","toLowerCase","planet","length","reduce","acc","filterObj","Number","ordenatedPlanetsToRender","Object","keys","unknown","sorted","planets","a","b","sortByColumn","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","films","created","edited","url","fetchData","succcess","error","fetch","then","response","json","ok","Provider","children","setData","setError","localeCompare","ordenateResults","context","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b437ff66.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icons8-guerra-nas-estrelas.952e2ba8.svg\";","import { createContext } from 'react';\n\nconst Context = createContext();\n\nexport default Context;\n","import React, { useContext, useState, useEffect } from 'react';\nimport Context from '../context/Context';\n\nconst initialColumnFilters = ['population', 'orbital_period',\n  'diameter', 'rotation_period', 'surface_water'];\nconst noMagicNumber = 36;\n\nfunction Filters() {\n  const { filters, setFilters, columnFilters, setOrder,\n    savedFilters, setSavedFilters, setColumnFilters } = useContext(Context);\n  const [ordenate, setOrdenate] = useState({ column: 'population', sort: 'ASC' });\n\n  // State usado para criar objeto para filtro numérico\n  const numericalFilterObj = {\n    column: 'population',\n    comparison: 'maior que',\n    value: '0',\n    id: Math.floor(Date.now() * Math.random()).toString(noMagicNumber), // Fonte: https://codigofonte.org/gerando-id-aleatorio-em-javascript/\n  };\n  const [numericalFilter, setNumericalFilter] = useState(numericalFilterObj);\n\n  // Fonte desta função: https://metring.com.br/javascript-primeira-letra-maiuscula\n  const capitalize = (str) => (typeof str !== 'string'\n    ? ''\n    : str.charAt(0).toUpperCase() + str.substr(1));\n\n  // Não repetição de filtros numéricos\n  useEffect(() => {\n    const currentFilters = savedFilters.map((filter) => filter.column);\n    if (currentFilters) {\n      const newFilter = initialColumnFilters\n        .filter((column) => !currentFilters.includes(column));\n      setColumnFilters(newFilter);\n    }\n  }, [savedFilters, setColumnFilters]);\n\n  function handleDeleteFilter(idFilter) {\n    const newSavedFilter = savedFilters.filter((item) => item.id !== idFilter);\n    setSavedFilters(newSavedFilter);\n  }\n\n  return (\n    <div className=\"filters-container\">\n      <div className=\"input-containers\">\n        <section className=\"filters\">\n          <input\n            data-testid=\"name-filter\"\n            type=\"text\"\n            placeholder=\"Digite um planeta\"\n            onChange={ (e) => setFilters({ ...filters, filterByName: e.target.value }) }\n          />\n          <select\n            defaultValue={ columnFilters[0] }\n            data-testid=\"column-filter\"\n            value={ numericalFilter.column }\n            onChange={ ({ target }) => setNumericalFilter({\n              ...numericalFilter,\n              column: target.value,\n              id: Math.floor(Date.now() * Math.random()).toString(noMagicNumber),\n            }) }\n          >\n            {columnFilters.map((name) => (\n              <option\n                key={ name }\n                value={ name }\n              >\n                {capitalize(name.replace(/_/i, ' '))}\n              </option>))}\n          </select>\n          <select\n            defaultValue=\"maior que\"\n            value={ numericalFilter.comparison }\n            data-testid=\"comparison-filter\"\n            onChange={ ({ target }) => setNumericalFilter({\n              ...numericalFilter,\n              comparison: target.value,\n            }) }\n          >\n            <option value=\"maior que\">Maior que</option>\n            <option value=\"menor que\">Menor que</option>\n            <option value=\"igual a\">Igual a</option>\n          </select>\n          <input\n            defaultValue={ 0 }\n            type=\"number\"\n            value={ numericalFilter.value }\n            data-testid=\"value-filter\"\n            placeholder=\"Digite um número\"\n            onChange={ ({ target }) => setNumericalFilter({\n              ...numericalFilter,\n              value: target.value,\n            }) }\n          />\n          <button\n            data-testid=\"button-filter\"\n            type=\"button\"\n            onClick={ () => {\n              setSavedFilters([...savedFilters, numericalFilter]);\n              setNumericalFilter(numericalFilterObj);\n            } }\n          >\n            Filtrar\n          </button>\n          <button\n            type=\"button\"\n            data-testid=\"button-remove-filters\"\n            onClick={ () => setSavedFilters([]) }\n          >\n            Remover filtros\n          </button>\n        </section>\n        <section className=\"order\">\n          <select\n            data-testid=\"column-sort\"\n            onChange={ ({ target }) => setOrdenate({\n              ...ordenate, column: target.value }) }\n          >\n            {initialColumnFilters.map((name, index) => (\n              <option\n                key={ index }\n                value={ name }\n              >\n                {capitalize(name.replace(/_/i, ' '))}\n              </option>))}\n          </select>\n          <label htmlFor=\"ASC\">\n            <input\n              name=\"order\"\n              value=\"ASC\"\n              type=\"radio\"\n              data-testid=\"column-sort-input-asc\"\n              id=\"ASC\"\n              onChange={ ({ target }) => setOrdenate({\n                ...ordenate, sort: target.value }) }\n              className=\"radio\"\n            />\n            Ascendente\n          </label>\n          <label htmlFor=\"DSC\">\n            <input\n              name=\"order\"\n              value=\"DSC\"\n              type=\"radio\"\n              data-testid=\"column-sort-input-desc\"\n              id=\"DSC\"\n              onChange={ ({ target }) => setOrdenate({\n                ...ordenate, sort: target.value }) }\n              className=\"radio\"\n            />\n            Descendente\n          </label>\n          <button\n            type=\"button\"\n            data-testid=\"column-sort-button\"\n            onClick={ () => setOrder(ordenate) }\n          >\n            Ordenar\n          </button>\n        </section>\n      </div>\n\n      <section className=\"applied-filters\">\n        { savedFilters && savedFilters.map((filter) => (\n          <p key={ filter.id } data-testid=\"filter\">\n            {`${filter.column} ${filter.comparison} ${filter.value}`}\n            <button\n              type=\"button\"\n              onClick={ () => handleDeleteFilter(filter.id) }\n            >\n              X\n            </button>\n          </p>\n        ))}\n      </section>\n    </div>\n\n  );\n}\n\nexport default Filters;\n","import React from 'react';\nimport starWars from '../img/icons8-guerra-nas-estrelas.svg';\n\nfunction Header() {\n  return (\n    <header>\n      <img src={ starWars } alt=\"starwars-logo\" />\n    </header>\n  );\n}\n\nexport default Header;\n","import React, { useContext } from 'react';\nimport Context from '../context/Context';\nimport './Table.css';\n\nfunction Table() {\n  const { data: { results }, filters: { filterByName },\n    savedFilters, order } = useContext(Context);\n\n  function filters() {\n    const planetToLowerCase = filterByName.toLowerCase(); // Filtro nome planeta\n    if (filterByName !== '') {\n      return results\n        .filter((planet) => planet.name.toLowerCase().includes(planetToLowerCase));\n    }\n    if (savedFilters.length) { // Filtros numéricos\n      return savedFilters.reduce((acc, filterObj) => {\n        acc = acc.filter((item) => {\n          switch (filterObj.comparison) {\n          case 'maior que':\n            return Number(item[filterObj.column]) > Number(filterObj.value);\n          case 'menor que':\n            return Number(item[filterObj.column]) < Number(filterObj.value);\n          default:\n            return Number(item[filterObj.column]) === Number(filterObj.value);\n          }\n        });\n        return acc;\n      }, results);\n    }\n    return results;\n  }\n  const planetsToRender = filters();\n\n  function sortByColumn(column, sort) {\n    const planets = planetsToRender.filter((planet) => planet[column] !== 'unknown');\n    planets.sort((a, b) => {\n      const isAsc = sort === 'ASC';\n      if (isAsc) {\n        return Number(a[column]) - Number(b[column]);\n      }\n      return Number(b[column]) - Number(a[column]);\n    });\n    return planets;\n  }\n\n  function ordenate() {\n    if (Object.keys(order).length) {\n      const { column, sort } = order;\n      const unknown = planetsToRender.filter((item) => item[column] === 'unknown');\n      const sorted = sortByColumn(column, sort);\n      return [...sorted, ...unknown];\n    }\n    return planetsToRender;\n  }\n  const ordenatedPlanetsToRender = ordenate();\n\n  if (!ordenatedPlanetsToRender) return (<span>Loading</span>);\n  return (\n    <div className=\"table-container\">\n      <table>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Rotation Period</th>\n            <th>Orbital Period</th>\n            <th>Diameter</th>\n            <th>Climate</th>\n            <th>Gravity</th>\n            <th>Terrain</th>\n            <th>Surface Water</th>\n            <th>Population</th>\n            <th>Films</th>\n            <th>Created</th>\n            <th>Edited</th>\n            <th>URL</th>\n          </tr>\n        </thead>\n        <tbody>\n          { ordenatedPlanetsToRender.map((item) => (\n            <tr key={ item.name }>\n              <td data-testid=\"planet-name\">{item.name}</td>\n              <td>{item.rotation_period}</td>\n              <td>{item.orbital_period}</td>\n              <td>{item.diameter}</td>\n              <td>{item.climate}</td>\n              <td>{item.gravity}</td>\n              <td>{item.terrain}</td>\n              <td>{item.surface_water}</td>\n              <td>{item.population}</td>\n              <td>{item.films}</td>\n              <td>{item.created}</td>\n              <td>{item.edited}</td>\n              <td>{item.url}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default Table;\n","const fetchData = (succcess, error) => {\n  fetch('https://swapi-trybe.herokuapp.com/api/planets/')\n    .then((response) => response.json()\n      .then((json) => (response.ok ? succcess(json) : error(json))));\n};\n\nexport default fetchData;\n","import React, { useEffect, useState } from 'react';\nimport propTypes from 'prop-types';\nimport Context from './Context';\nimport fetchData from '../services/fetchData';\n\nconst initialColumnFilters = ['population', 'orbital_period',\n  'diameter', 'rotation_period', 'surface_water'];\n\nfunction Provider({ children }) {\n  const [data, setData] = useState({});\n  const [error, setError] = useState({});\n  const [filters, setFilters] = useState({ filterByName: '' });\n  const [columnFilters, setColumnFilters] = useState(initialColumnFilters);\n  const [savedFilters, setSavedFilters] = useState([]);\n  const [order, setOrder] = useState({});\n\n  // Chama o resultado do fetch\n  useEffect(() => fetchData(setData, setError), []);\n\n  // Ordenação inicial dos planetas por ordem alfabética\n  function ordenateResults() {\n    const { results } = data;\n    if (results) {\n      results.sort((a, b) => a.name.localeCompare(b.name));\n    }\n  }\n  ordenateResults();\n\n  // Variável que engloba dados do contexto\n  const context = {\n    data,\n    error,\n    filters,\n    setFilters,\n    columnFilters,\n    setColumnFilters,\n    savedFilters,\n    setSavedFilters,\n    order,\n    setOrder,\n  };\n\n  return (\n    <Context.Provider value={ context }>\n      {children}\n    </Context.Provider>\n  );\n}\n\nProvider.propTypes = {\n  children: propTypes.node.isRequired,\n  // context: propTypes.shape({\n  //   handleFetchSuccess: propTypes.func,\n  //   handleFetchError: propTypes.func,\n  // }).isRequired,\n};\n\nexport default Provider;\n","import React from 'react';\nimport './App.css';\nimport Filters from './components/Filters';\nimport Header from './components/Header';\nimport Table from './components/Table';\nimport Provider from './context/Provider';\n\nfunction App() {\n  return (\n    <Provider>\n      <Header />\n      <div className=\"container\">\n        <Filters />\n        <Table />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}